from random import randint, choice
import click


class Margherita:
    """ –û–ø–∏—Å—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ —Å–æ—Å—Ç–∞–≤ –ø–∏—Ü—Ü—ã '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞' """
    def __init__(self, size):
        if size in ('L', 'XL'):
            self.size = size
        else:
            ValueError('Sorry, this size is not available')

    @staticmethod
    def dict():
        recipe = {'Margherita üßÄ': 'tomato sauce, mozzarella, tomatoes'}
        return recipe

    def __eq__(self, other):
        return self.size == other.size


class Pepperoni:
    """ –û–ø–∏—Å—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ —Å–æ—Å—Ç–∞–≤ –ø–∏—Ü—Ü—ã '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏' """
    def __init__(self, size):
        if size in ('L', 'XL'):
            self.size = size
        else:
            ValueError('Sorry, this size is not available')

    @staticmethod
    def dict():
        recipe = {'Pepperoni üçï': 'tomato sauce, mozzarella, pepperoni'}
        return recipe

    def __eq__(self, other):
        return self.size == other.size


class Hawaiian:
    """ –û–ø–∏—Å—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ —Å–æ—Å—Ç–∞–≤ –ø–∏—Ü—Ü—ã '–ì–∞–≤–∞–π—Å–∫–∞—è' """
    def __init__(self, size):
        if size in ('L', 'XL'):
            self.size = size
        else:
            ValueError('Sorry, this size is not available')

    @staticmethod
    def dict():
        recipe = {'Hawaiian üçç': 'tomato sauce, mozzarella, chicken, pineapple'}
        return recipe

    def __eq__(self, other):
        return self.size == other.size


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.option('--size', default='L', type=str)
@click.argument('pizza', nargs=1)
def order(pizza: str, size: str, deliver: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    if pizza == 'Pepperoni':
        Pepperoni(size)
    elif pizza == 'Margherita':
        Margherita(size)
    elif pizza == 'Hawaiian':
        Hawaiian(size)
    print(f' üë®üèª‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {randint(1,10)}—Å!')
    if deliver:
        print(f' üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {randint(1,10)}—Å!')


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é"""
    sizes = ['L', 'XL']
    print(Margherita(choice(sizes)).dict())
    print(Pepperoni(choice(sizes)).dict())
    print(Hawaiian(choice(sizes)).dict())


def log(my_str: str = None):
    """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ ,–ª–∏–±–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ"""
    def decorate(func):
        def decor(*args, **kwargs):
            if my_str is None:
                func(*args, **kwargs)
                print(f'{func.__name__} - {randint(1,10)} c!')
            else:
                func(*args, **kwargs)
                print(my_str.replace('{}', str(randint(1, 10))))
        return decor

    return decorate


@log()
def bake(pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('–î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!')
def delivery(pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log('–ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!')
def pickup(pizza):
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""


if __name__ == '__main__':
    print(bake(Margherita('L')))
    print(delivery(Margherita('L')))
